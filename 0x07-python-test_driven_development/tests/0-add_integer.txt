The ``0-add_integer`` Documentation Module

-------------------------
Usage of 0-add_integer.py
-------------------------

Defining the add_integer function:

def add_integer(a, b=98):
	"""Adds two integers.
	Args:
		a: first int.
		b: second int, default value is 98.
	Raises:
		TypeError: if a, b are neither int or float.
	returns:
		sum of a and b.
	"""

Importing ``add_integer`` to use it:

	>>> add_integer = __import__("0-add_integer").add_integer

Using it:

Adding two integers:
	>>> add_integer(9, 8)
	17
Adding a negative number:
	>>> add_integer(-9, 8)
	-1

Adding two negative numbers:
        >>> add_integer(-9, -8)
        -17
Adding two floats:
	>>> add_integer(9.0, 8.6)
	17
Adding two floats:
	>>> add_integer(9.5, 8.6)
	17
Adding negative floats:
	>>> add_integer(-9.5, -8.6)
	-17
Adding integer and float:
	>>> add_integer(-9, 8.6)
	-1
"""b is set to 98 by default"""
Adding one integer:
	>>> add_integer(9)
	107
Adding a NAN:
	>>> add_integer(9, float('NaN'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

***In case the argument wasn't a number***

Adding a string:
	>>> add_integer("Hello", 8)
	Traceback (most recent call last):
	...
	ValueError: a must be an integer
Adding no input:
	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
Adding two strings:
	>>> add_integer("hello", "world")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
